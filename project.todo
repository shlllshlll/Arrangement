医院排班系统项目任务列表:

短期任务列表:
  ☐ 将病房排班与科室分组Excel数据格式对应起来
  ☐ 人员信息模块添加人员信息添加按钮，做成下拉菜单控制的模式
  ☐ 增加值班历史与对应时间存储与显示的功能
  ☐ 增加一个人员类型的数据
  ☐ 改进人员信息维护模块的Excel导入功能，使其更加通用
  ☐ 增加用户登录与注册模块
  ☐ 科室分组数据实现实时保存
  ☐ 实现科室分组结果与病房排版输入的内部互通，通过上传服务器实现
  ☐ 科室分组和病房排版的标签页导航优化，导航标签不能随便点，下一步与Excel导出融合
  ☐ 科室分组表格样式优化，实现更多色彩
  ☐ 在人员信息维护的添加功能中增加预排版和历史排班功能

---- ✄ -----------------------

WEB前端:
  ✔ 实现科室分组模块 @done (18-10-09 21:20)
  ✔ 将不同模块组件化、模块化 @done (18-10-09 21:20)
  ☐ 使用MVC、MVP以及MVVM等开发框架进行开发
  ☐ 使用Gulp、Webpack等项目管理工具

服务器后端:
  ☐ 重构代码，采用分层结构，使结构更清晰
  ☐ Web.py实现Session登录功能
  ☐ 采用RESTful设计API
  ☐ Web.py进行分文件搭建
  ☐ 为RESTful API增加Oauth1、2或Xoauth等授权验证模块

--- ✄ -----------------------

算法研究:
  ☐ 实现基于规则约束的排班算法
    基于不同变量之间的规则约束，使用贪心算法，即一遇到满足约束条件的排班即进行排课。对于最后排课失败的人员使用回溯法进行调整，以满足条件。最后多次运行，采用多种手段评估排课结果，选择最优的结果输出
  ☐ 实现基于CSP约束满足问题解决排课算法
    使用CSP中的BackTrack和AC-3等算法解决约束满足问题
  ☐ 实现基于遗传算法的排课算法
  ☐ 综合使用多种算法解决排课问题
  ☐ 探寻其他算法解决上述问题

--- ✄ -----------------------

软件测试:
  ☐ 基于单元测试的开发模式
  ☐ 探索前端开发时的虚拟后端服务测试工具
  ☐ 探索后端开发时的RESTful测试工具
